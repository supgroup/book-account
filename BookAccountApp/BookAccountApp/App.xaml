<Application x:Class="BookAccountApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookAccountApp"
             xmlns:converters="clr-namespace:BookAccountApp.converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Startup="Application_Startup"
           >
    <!--StartupUri="MainWindow.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <converters:unlimitedCountConverter x:Key="unlimitedCountConverter"/>
            <converters:agentNameConverter x:Key="agentNameConverter"/>
            <converters:permissionsNameConverter x:Key="permissionsNameConverter"/> 
            <converters:packagePeriodConverter   x:Key="packagePeriodConverter"/>
            <converters:isActiveConverter   x:Key="isActiveConverter"/>
            <converters:dateFrameConverter x:Key="dateFrameConverter"/>
            <converters:unlimitedConverter x:Key="unlimitedConverter"/>
            <converters:countConverter x:Key="countConverter"/>

            <!--#region Fonts-->
            <FontFamily x:Key="BarcodeFont" >IDAHC39M Code 39 Barcode, /BookAccountApp;component/fonts/#IDAHC39M Code 39 Barcode, Arial</FontFamily>
            <FontFamily x:Key="Font-cairo-light" >cairo light, /BookAccountApp;component/fonts/cairo-font/#cairo light, Arial</FontFamily>
            <FontFamily x:Key="Font-cairo-bold" >cairo bold , /BookAccountApp;component/fonts/cairo-font/#cairo bold, Arial</FontFamily>

            
            
            <!--#region  DataGrid-->
            <!--<Style TargetType="DataGridRow">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding isActive}" Value="0">
                        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="strikethrough">
                <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
            </Style>-->
            <!--#endregion-->
            
        <!--#endregion-->
        <Style x:Key="ToolTipError" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Background" Value="#15FF0000"/>
        </Style>
        <!--#region ScrollBarTrackThumb-->
        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Width"
            Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
            
            
            <!--#region Button-->
            <Style x:Key="SmallButtonCircleRotate20" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Background="#02FFFFFF">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.6" To="20" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="20" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.6" To="#178DD2"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#9CD0EF"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15" Opacity="1"/>
                                <Path x:Name="X" Margin="0"  Data="{Binding}"
                              Fill="#178DD2" HorizontalAlignment="Center" 
                                      Stretch="Fill" VerticalAlignment="Center" Height="20" Width="20"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-90"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-360"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Width" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--<Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style x:Key="SmallButtonCircleRotate" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Background="#02FFFFFF">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.6" To="#178DD2"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#9CD0EF"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15" Opacity="1"/>
                                <Path x:Name="X" Margin="0"  Data="{Binding}"
                              Fill="#178DD2" HorizontalAlignment="Center" 
                                      Stretch="Fill" VerticalAlignment="Center" Height="27.5" Width="27.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-90"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-360"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Width" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--<Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <!--#endregion-->

            <Geometry x:Key="infoCircle" >M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M12,13 C11.45,13 11,12.55 11,12 L11,8 C11,7.45 11.45,7 12,7 C12.55,7 13,7.45 13,8 L13,12 C13,12.55 12.55,13 12,13 Z M13,17 L11,17 L11,15 L13,15 L13,17 Z</Geometry>


            <!--#region  Colors-->
            <SolidColorBrush x:Key="MainColor" Color="#2491EA"/>
            <SolidColorBrush x:Key="SecondColor" Color="#545E66"/>
            <SolidColorBrush x:Key="Blue" Color="#178DD2"/>
            <SolidColorBrush x:Key="Orange" Color="#FFA926"/>
            <SolidColorBrush x:Key="Red" Color="#D22A17"/>
            <SolidColorBrush x:Key="Grey" Color="#4E4E4E"/>
            <SolidColorBrush x:Key="LightGrey" Color="#8C8C8C"/>
            <SolidColorBrush x:Key="veryLightGrey" Color="#DFDFDF"/>
            <SolidColorBrush x:Key="lightGreen" Color="#E2EFDA"/>
            <SolidColorBrush x:Key="lightRed" Color="#FCE4D6"/>
            <SolidColorBrush x:Key="mediumGreen" Color="#008A1C"/>
            <SolidColorBrush x:Key="mediumRed" Color="#E53D29"/>
            <SolidColorBrush x:Key="White" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="MainColorBlue" Color="#178DD2"/>
            <SolidColorBrush x:Key="MainColorOrange" Color="#FFA926"/>
            <SolidColorBrush x:Key="MainColorGrey" Color="#4E4E4E"/>
            <SolidColorBrush x:Key="MainColorlightGrey" Color="#DFDFDF"/>
            <SolidColorBrush x:Key="MainColorRed" Color="#D22A17"/>
            <!--#endregion-->

            <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.blue.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
        </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
